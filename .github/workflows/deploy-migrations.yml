name: Deploy Database Migrations

on:
  push:
    paths:
      - 'packages/prisma/migrations/**'
    branches:
      - main

jobs:
  deploy-migrations:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # ✅ Step 1: Fail fast if DB is unreachable
      - name: Verify DB connection
        run: npx prisma db pull --url "$POSTGRES_PRISMA_URL"
        env:
          POSTGRES_PRISMA_URL: ${{ secrets.POSTGRES_PRISMA_URL }}

      # ✅ Step 2: Run migrations with timeout
      - name: Apply pending migrations to database
        run: pnpm --filter @leaseup/prisma run db:migrate
        env:
          POSTGRES_PRISMA_URL: ${{ secrets.POSTGRES_PRISMA_URL }}
        timeout-minutes: 5
